{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^s@]+\\.[^\\s@]+$/;\n  const senha_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.email === \"\") {\n    error.email = \"Email não deve estar vazio\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email invalido\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.senha === \"\") {\n    error.senha = \"Senha não deve estar vazia\";\n  } else if (!senha_pattern.test(values.senha)) {\n    error.senha = \"Senha deve possuir mais caracteres\";\n  } else {\n    error.senha = \"\";\n  }\n  if (values.las === \"\") {\n    error.las = \"LAS não deve estar vazia\";\n  } else if (!senha_pattern.test(values.las)) {\n    error.las = \"Mais caracteres?\";\n  } else {\n    error.las = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","senha_pattern","email","test","senha","las","_c","$RefreshReg$"],"sources":["/workspace/New-Project-Integrate/frontend/src/SignupValidation.js"],"sourcesContent":["function Validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^s@]+\\.[^\\s@]+$/\r\n    const senha_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    if(values.email === \"\") {\r\n        error.email = \"Email não deve estar vazio\"\r\n    }\r\n    else if(!email_pattern.test(values.email)) {\r\n        error.email = \"Email invalido\"\r\n    }else {\r\n        error.email = \"\"\r\n    }\r\n\r\n    if(values.senha === \"\"){\r\n        error.senha = \"Senha não deve estar vazia\"\r\n    }else if(!senha_pattern.test(values.senha)) {\r\n        error.senha = \"Senha deve possuir mais caracteres\"\r\n    }else {\r\n        error.senha = \"\"\r\n    }\r\n\r\n    if(values.las === \"\"){\r\n        error.las = \"LAS não deve estar vazia\"\r\n    }else if(!senha_pattern.test(values.las)) {\r\n        error.las = \"Mais caracteres?\"\r\n    }else {\r\n        error.las = \"\"\r\n    }\r\n    return error;\r\n}\r\n\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,2BAA2B;EACjD,MAAMC,aAAa,GAAG,iDAAiD;EAEvE,IAAGH,MAAM,CAACI,KAAK,KAAK,EAAE,EAAE;IACpBH,KAAK,CAACG,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MACI,IAAG,CAACF,aAAa,CAACG,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAE;IACvCH,KAAK,CAACG,KAAK,GAAG,gBAAgB;EAClC,CAAC,MAAK;IACFH,KAAK,CAACG,KAAK,GAAG,EAAE;EACpB;EAEA,IAAGJ,MAAM,CAACM,KAAK,KAAK,EAAE,EAAC;IACnBL,KAAK,CAACK,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MAAK,IAAG,CAACH,aAAa,CAACE,IAAI,CAACL,MAAM,CAACM,KAAK,CAAC,EAAE;IACxCL,KAAK,CAACK,KAAK,GAAG,oCAAoC;EACtD,CAAC,MAAK;IACFL,KAAK,CAACK,KAAK,GAAG,EAAE;EACpB;EAEA,IAAGN,MAAM,CAACO,GAAG,KAAK,EAAE,EAAC;IACjBN,KAAK,CAACM,GAAG,GAAG,0BAA0B;EAC1C,CAAC,MAAK,IAAG,CAACJ,aAAa,CAACE,IAAI,CAACL,MAAM,CAACO,GAAG,CAAC,EAAE;IACtCN,KAAK,CAACM,GAAG,GAAG,kBAAkB;EAClC,CAAC,MAAK;IACFN,KAAK,CAACM,GAAG,GAAG,EAAE;EAClB;EACA,OAAON,KAAK;AAChB;AAACO,EAAA,GA9BQT,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}